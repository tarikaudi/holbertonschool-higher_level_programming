Import method:
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Cases that should work:

	>>> matrix_divided([[4, 11, 24], [3, 8, 90]], 4)
        [[0, 2.75, 6], [0.75, 2, 22.5]]

None cases:

	>>> matrix_divided([[12, 23, 31], [412, 53, 64]], None)
	Traceback (most recent call last):
	...
	TypeError: div must be a number

	>>> matrix_divided(None, 10)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[None][None]], 5)
	Traceback (most recent call last):
        ...
        TypeError: list indices must be integers or slices, not NoneType

Empty cases:

	>>> matrix_divided([], 10)
	Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[1, 2, 3], []], 12)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

	 >>> matrix_divided([[], []], 3)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Division by 0:

	>>> matrix_divided([[22, 11], [32, 9]], 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

No argument:

	>>> matrix_divided([[1, 11], [12, 22]])
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'
